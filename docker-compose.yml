---
version: '3'

x-defaults: &service-defaults
  pull_policy: always
  privileged: false
  read_only: true
  deploy:
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 5
      window: 120s
  tmpfs:
    - /tmp
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

services:
  database:
    <<: *service-defaults
    image: postgres
    container_name: database
    read_only: false
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql:ro
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  backend:
    <<: *service-defaults
    build: ./backend
    container_name: backend
    restart: on-failure
    ports:
      - 8080:8080
    depends_on:
      - database
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}

  frontend:
    <<: *service-defaults
    build: ./frontend
    container_name: frontend
    read_only: false
    ports:
      - 4200:80
    # volumes:
      # - ./reverse-proxy/http-taiko.conf.template:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend

volumes:
  data:

